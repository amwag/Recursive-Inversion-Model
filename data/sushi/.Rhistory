read.csv('sushi3a.5000.10')
read.csv('sushi3a.5000.10.order')
dat=read.csv('sushi3a.5000.10.order')
dim(dat)
dat<-read.csv("sushi3a.5000.10.order")
users<-read.csv("sushi3.udata")
dim(dat)
dat[1:10,]
dat<-read.csv("sushi3a.5000.10.order",sep=' ')
users<-read.csv("sushi3.udata",sep=' ')
dat<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE)
users<-read.csv("sushi3.udata",sep=' ')
dim(dat)
dim(users)
users<-read.csv("sushi3.udata",sep=' ',header=FALSE)
dim(users)
users[1]
dim(dat)
users<-read.csv("sushi3.udata",sep='\t',header=FALSE)
dim(users)
gender=users[,2]
age=users[,3]
gender=users[,2]
age=users[,3]
ewu15=users[,7]
ewcur=users[,10]
dat[,1:10]
dat[1:10,]
dat=dat[,3:12]
dim(dat)
rank=matrix(0,dim(dat))
dim(rank)
rank=matrix(0,dim(dat)[1],dim(dat)[2])
dim(rank)
dat<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE)
dat=dat[,3:12]
rank=matrix(0,dim(dat)[1],dim(dat)[2])
for(i in 1:dim(dat)[1]){
for(j in 1:dim(dat)[2]){
rank[i,dat[i,j]+1]=j
}
}
sum(rank)
rank[1,]
dat[1,]
dat<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE)
dat=dat[,3:12]
rank=matrix(0,dim(dat)[1],dim(dat)[2])
for(i in 1:dim(dat)[1]){
for(j in 1:dim(dat)[2]){
rank[i,dat[i,j]+1]=j-1
}
}
hist(rank[,10])
hist(rank[,9])
hist(rank[,8])
hist(rank[,7])
hist(rank[,6])
hist(rank[,5])
hist(rank[,4])
hist(rank[,3])
hist(rank[,2])
hist(rank[,1])
hist(rank[,5])
hist(rank[ewu15==1,5])
hist(rank[ewu15==0,5])
hist(rank[ewcur==0,5])
hist(rank[ewcur==1,5])
hist(rank[ewu15==1,5])
sum(ewcur==ewu15)
write.table(rank[gender==0,],"sushiGenM.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[gender==1,],"sushiGenF.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[ewu15==0,],"sushiEu15.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[ewu15==1,],"sushiWu15.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[ewcur==0,],"sushiEcur.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[ewcur==1,],"sushiWcur.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==0,],"sushiage0.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==1,],"sushiage1.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==2,],"sushiage2.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==3,],"sushiage3.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==4,],"sushiage4.txt",col.names=FALSE,row.names=FALSE)
write.table(rank[age==5,],"sushiage5.txt",col.names=FALSE,row.names=FALSE)
write.table(rank,"sushiAll.txt",col.names=FALSE,row.names=FALSE)
#source("ParseFuncs.R")
library(stringr)
library(plotrix)
library(latex2exp)
doit<-function(test,depth,shift,thetas){
lps=gregexpr(pattern="\\(",test)[[1]]
rps=gregexpr(pattern="\\)",test)[[1]]
commas=gregexpr(pattern="\\,",test)[[1]]
pipes=gregexpr(pattern="\\|",test)[[1]]
n=length(pipes)+1
if(pipes[1]!=-1){
ind=1
while(sum(lps<commas[ind])-1!=sum(rps<commas[ind]))
ind=ind+1
lhs=substr(test,2,commas[ind]-1)
nl=length(gregexpr(pattern="\\|",lhs)[[1]])+1
if(gregexpr(pattern="\\|",lhs)[[1]][1]==-1)
nl=1
rhs=substr(test,commas[ind]+1,pipes[length(pipes)]-1)
nr=length(gregexpr(pattern="\\|",rhs)[[1]])+1
if(gregexpr(pattern="\\|",rhs)[[1]][1]==-1)
nr=1
tstr=substr(test,pipes[length(pipes)]+2,str_length(test)-2)
thet=as.double(strsplit(tstr,";")[[1]])
rmat=matrix(c(-1,depth,shift,n,nl,nr,thet),nrow=1)
rmat=rbind(rmat,doit(lhs,depth+1,shift,thetas))
rmat=rbind(rmat,doit(rhs,depth+1,shift+nl,thetas))
return(rmat)
}
else{
print(paste("Leaf",test))
rmat=matrix(c(as.integer(test),depth,shift,1,0,0,rep(0,thetas)),nrow=1)
}
}
plotTree<-function(inMatrix){
plot(c(0,max(inMatrix[,3])+1),c(0,min(-inMatrix[,2]/2)),type='n')
for(i in 1:dim(inMatrix)[1]){
if(inMatrix[i,1]==-1){
lines(c(rep(inMatrix[i,3]+inMatrix[i,5]/2,2),rep(inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2,2)),-inMatrix[i,2]/2-c(1/2,0,0,1/2))
mid=(inMatrix[i,3]+inMatrix[i,5]/2+inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2)/2
label=as.character(round(inMatrix[i,7],2))
for(j in 2:(dim(inMatrix)[2]-6))
label=paste(label,as.character(round(inMatrix[i,6+j],2)),sep="\n")
boxed.labels(mid,-inMatrix[i,2]/2,labels=label,ypad=1.3,xpad=1.3,cex=.6)
}
else{
boxed.labels(inMatrix[i,3]+.5,-inMatrix[i,2]/2,labels=as.character(inMatrix[i,1]),ypad=1.3,xpad=1.3,cex=1.1)
}
}
}
sushigen="((1,(5,(((((2,7|[-0.9391267014534046;-1.2768102702200281]),8|[0.8008580886762153;1.0903389853177772]),(3,0|[-0.6070095027151088;-0.5567047153034751])|[0.12507591678409097;0.2834058834020726]),6|[0.3930251191505072;0.430056641128668]),9|[0.564326900377232;0.6389149783399393])|[0.08174673784384198;0.04458618825859201])|[0.005039881445321415;0.07739136175413813]),4|[0.0529804220374786;-0.03212365967039915])"
sushigenmat=doit(sushigen,1,0,2)
plotTree(sushigenmat)
sushiewu15="(4,(1,(5,((2,7|[-1.065188734330623;-0.8360752927056124]),(((0,(8,3|[0.05777229892664876;-0.15570814089645935])|[0.4104927660148911;0.327516448259412]),6|[0.32486249817107304;0.44163881017111334]),9|[0.6578804452537711;0.6557747231698835])|[0.4756915013336388;0.36047126201716284])|[0.09070784435486717;0.018669324633792783])|[0.041249233498237003;0.06369364932517324])|[9.860378049268703E-4;0.02315882874727687])"
sushiewu15mat=doit(sushiewu15,1,0,2)
plotTree(sushiewu15mat)
sushiage="(7,2|[0.7940259141880499;1.2814520130209726;1.2245505459009847;0.9961858049198642;1.0480525621299184;0.8652981877645816])|[-0.5009865161212628;-0.3185684774647306;-0.4922040718414832;-0.5276296835626417;-0.7947758573763967;-1.0415129830658012]),(3,(8,9|[1.5868514763681505;1.4236095672233202;1.5804321764943512;1.6993473501123029;1.7046231766650497;2.5248125671353088])|[0.08503161549224603;0.43051262316701855;0.40886329241940933;0.5432994549310459;0.6827953508032423;-0.05549015827648134])|[0.5239795359024025;0.5427842205305807;0.5075392748938858;0.5027263319489486;0.504458017602591;0.5405644846754124]),1|[0.102300085882888;-0.07150423097339248;-0.018299074430771056;-0.018187125242350333;-0.016834028845954196;0.22151605206115574]),6|[0.1964387165576335;0.13521518136789917;0.21808727400738404;0.3357548315315638;0.3226410517553657;0.6963642804967283])|[0.07558611695935727;0.07558320547823319;0.0823841791233374;0.033230576429067044;0.015869267556315653;0.016664372332814557]),4|[0.27256611430444255;0.0872784408004636;-0.025155371644500935;-0.06923892561615044;-0.1370103689602417;-0.161559410367908])"
sushiagemat=doit(sushiage,1,0,6)
plotTree(sushiagemat)
sushiagemat=doit(sushiage,1,0,5)
sushiagemat=doit(sushiage,1,0,6)
sushiagemat=doit(sushiage,1,0,6)
rhs
lhs
ps()
ls()
commas
depth
ind
lps
sushiagemat=doit(sushiage,1,0,6)
plotTree(sushiagemat)
doit<-function(test,depth,shift,thetas){
lps=gregexpr(pattern="\\(",test)[[1]]
rps=gregexpr(pattern="\\)",test)[[1]]
commas=gregexpr(pattern="\\,",test)[[1]]
pipes=gregexpr(pattern="\\|",test)[[1]]
n=length(pipes)+1
print("hello")
print(depth)
if(pipes[1]!=-1){
ind=1
while(sum(lps<commas[ind])-1!=sum(rps<commas[ind]))
ind=ind+1
lhs=substr(test,2,commas[ind]-1)
nl=length(gregexpr(pattern="\\|",lhs)[[1]])+1
if(gregexpr(pattern="\\|",lhs)[[1]][1]==-1)
nl=1
rhs=substr(test,commas[ind]+1,pipes[length(pipes)]-1)
nr=length(gregexpr(pattern="\\|",rhs)[[1]])+1
if(gregexpr(pattern="\\|",rhs)[[1]][1]==-1)
nr=1
tstr=substr(test,pipes[length(pipes)]+2,str_length(test)-2)
thet=as.double(strsplit(tstr,";")[[1]])
rmat=matrix(c(-1,depth,shift,n,nl,nr,thet),nrow=1)
rmat=rbind(rmat,doit(lhs,depth+1,shift,thetas))
rmat=rbind(rmat,doit(rhs,depth+1,shift+nl,thetas))
return(rmat)
}
else{
print(paste("Leaf",test))
rmat=matrix(c(as.integer(test),depth,shift,1,0,0,rep(0,thetas)),nrow=1)
}
}
plotTree<-function(inMatrix){
plot(c(0,max(inMatrix[,3])+1),c(0,min(-inMatrix[,2]/2)),type='n')
for(i in 1:dim(inMatrix)[1]){
if(inMatrix[i,1]==-1){
lines(c(rep(inMatrix[i,3]+inMatrix[i,5]/2,2),rep(inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2,2)),-inMatrix[i,2]/2-c(1/2,0,0,1/2))
mid=(inMatrix[i,3]+inMatrix[i,5]/2+inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2)/2
label=as.character(round(inMatrix[i,7],2))
for(j in 2:(dim(inMatrix)[2]-6))
label=paste(label,as.character(round(inMatrix[i,6+j],2)),sep="\n")
boxed.labels(mid,-inMatrix[i,2]/2,labels=label,ypad=1.3,xpad=1.3,cex=.6)
}
else{
boxed.labels(inMatrix[i,3]+.5,-inMatrix[i,2]/2,labels=as.character(inMatrix[i,1]),ypad=1.3,xpad=1.3,cex=1.1)
}
}
}
sushiage="(7,2|[0.7940259141880499;1.2814520130209726;1.2245505459009847;0.9961858049198642;1.0480525621299184;0.8652981877645816])|[-0.5009865161212628;-0.3185684774647306;-0.4922040718414832;-0.5276296835626417;-0.7947758573763967;-1.0415129830658012]),(3,(8,9|[1.5868514763681505;1.4236095672233202;1.5804321764943512;1.6993473501123029;1.7046231766650497;2.5248125671353088])|[0.08503161549224603;0.43051262316701855;0.40886329241940933;0.5432994549310459;0.6827953508032423;-0.05549015827648134])|[0.5239795359024025;0.5427842205305807;0.5075392748938858;0.5027263319489486;0.504458017602591;0.5405644846754124]),1|[0.102300085882888;-0.07150423097339248;-0.018299074430771056;-0.018187125242350333;-0.016834028845954196;0.22151605206115574]),6|[0.1964387165576335;0.13521518136789917;0.21808727400738404;0.3357548315315638;0.3226410517553657;0.6963642804967283])|[0.07558611695935727;0.07558320547823319;0.0823841791233374;0.033230576429067044;0.015869267556315653;0.016664372332814557]),4|[0.27256611430444255;0.0872784408004636;-0.025155371644500935;-0.06923892561615044;-0.1370103689602417;-0.161559410367908])"
sushiagemat=doit(sushiage,1,0,6)
plotTree(sushiagemat)
sushiage="(7,2|[0.7940259141880499;1.2814520130209726;1.2245505459009847;0.9961858049198642;1.0480525621299184;0.8652981877645816])|[-0.5009865161212628;-0.3185684774647306;-0.4922040718414832;-0.5276296835626417;-0.7947758573763967;-1.0415129830658012]),(3,(8,9|[1.5868514763681505;1.4236095672233202;1.5804321764943512;1.6993473501123029;1.7046231766650497;2.5248125671353088])|[0.08503161549224603;0.43051262316701855;0.40886329241940933;0.5432994549310459;0.6827953508032423;-0.05549015827648134])|[0.5239795359024025;0.5427842205305807;0.5075392748938858;0.5027263319489486;0.504458017602591;0.5405644846754124]),1|[0.102300085882888;-0.07150423097339248;-0.018299074430771056;-0.018187125242350333;-0.016834028845954196;0.22151605206115574]),6|[0.1964387165576335;0.13521518136789917;0.21808727400738404;0.3357548315315638;0.3226410517553657;0.6963642804967283])|[0.07558611695935727;0.07558320547823319;0.0823841791233374;0.033230576429067044;0.015869267556315653;0.016664372332814557]),4|[0.27256611430444255;0.0872784408004636;-0.025155371644500935;-0.06923892561615044;-0.1370103689602417;-0.161559410367908])"
sushiagemat=doit(sushiage,1,0,6)
plotTree(sushiagemat)
ind
lps
commas[ind]
commas
sushiage="((5,((((0,(7,2|[0.7940259141880499;1.2814520130209726;1.2245505459009847;0.9961858049198642;1.0480525621299184;0.8652981877645816])|[-0.5009865161212628;-0.3185684774647306;-0.4922040718414832;-0.5276296835626417;-0.7947758573763967;-1.0415129830658012]),(3,(8,9|[1.5868514763681505;1.4236095672233202;1.5804321764943512;1.6993473501123029;1.7046231766650497;2.5248125671353088])|[0.08503161549224603;0.43051262316701855;0.40886329241940933;0.5432994549310459;0.6827953508032423;-0.05549015827648134])|[0.5239795359024025;0.5427842205305807;0.5075392748938858;0.5027263319489486;0.504458017602591;0.5405644846754124]),1|[0.102300085882888;-0.07150423097339248;-0.018299074430771056;-0.018187125242350333;-0.016834028845954196;0.22151605206115574]),6|[0.1964387165576335;0.13521518136789917;0.21808727400738404;0.3357548315315638;0.3226410517553657;0.6963642804967283])|[0.07558611695935727;0.07558320547823319;0.0823841791233374;0.033230576429067044;0.015869267556315653;0.016664372332814557]),4|[0.27256611430444255;0.0872784408004636;-0.025155371644500935;-0.06923892561615044;-0.1370103689602417;-0.161559410367908])"
sushiagemat=doit(sushiage,1,0,6)
plotTree(sushiagemat)
table(age)
sushiall="((1,(5,((((8,(7,2|[1.1721231632719356])|[-0.9512733960408137]),(3,0|[-0.5779145108537594])|[0.21629992126210273]),6|[0.39336106544215776]),9|[0.5695656649443863])|[0.09031091999303509])|[0.045480263579781244]),4|[0.001070647224801935])"
sushiallmat=doit(sushiall,1,0,1)
plotTree(sushiallmat)
plotTree<-function(inMatrix){
plot(c(0,max(inMatrix[,3])+1),c(0,min(-inMatrix[,2]/2)),type='n')
for(i in 1:dim(inMatrix)[1]){
if(inMatrix[i,1]==-1){
lines(c(rep(inMatrix[i,3]+inMatrix[i,5]/2,2),rep(inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2,2)),-inMatrix[i,2]/2-c(1/2,0,0,1/2))
mid=(inMatrix[i,3]+inMatrix[i,5]/2+inMatrix[i,3]+inMatrix[i,4]-inMatrix[i,6]/2)/2
label=as.character(round(inMatrix[i,7],2))
if(dim(inMatrix)[2]>7)
for(j in 2:(dim(inMatrix)[2]-6))
label=paste(label,as.character(round(inMatrix[i,6+j],2)),sep="\n")
boxed.labels(mid,-inMatrix[i,2]/2,labels=label,ypad=1.3,xpad=1.3,cex=.6)
}
else{
boxed.labels(inMatrix[i,3]+.5,-inMatrix[i,2]/2,labels=as.character(inMatrix[i,1]),ypad=1.3,xpad=1.3,cex=1.1)
}
}
}
sushiall="((1,(5,((((8,(7,2|[1.1721231632719356])|[-0.9512733960408137]),(3,0|[-0.5779145108537594])|[0.21629992126210273]),6|[0.39336106544215776]),9|[0.5695656649443863])|[0.09031091999303509])|[0.045480263579781244]),4|[0.001070647224801935])"
sushiallmat=doit(sushiall,1,0,1)
plotTree(sushiallmat)
users<-read.csv("sushi3.udata",sep='\t',header=FALSE)
dat<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE)
dat
dat[3:12,]
dat[,3:12]
dat<-dat[,3:12]
?write.csv
write.csv(dat,"SushiClean.txt",sep=",")
write.csv(dat,"SushiClean.txt",sep=",",header=FALSE)
write.csv(dat,"SushiClean.txt",header=FALSE)
write.csv(dat,"SushiClean.txt",row.names=FALSE,col.names=FALSE)
rawsushi<-read.csv("sushi3a.5000.10.txt",sep='\t',header=FALSE) #Isn't most sushi raw?
rawsushi<-read.csv("sushi3a.5000.10.order",sep='\t',header=FALSE) #Isn't most sushi raw?
print(rawsushi)
rawsushi[3:12,]
rawsushi[,3:12]
rawsushi[1,3:12]
rawsushi[3:12,]
rawsushi[,3]
matrix(rawsushi)[,3]
as.matrix(rawsushi)[,3]
as.matrix(rawsushi)
rawsushi<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE) #Isn't most sushi raw?
as.matrix(rawsushi)
as.matrix(rawsushi)[,3:12]
rawsushi<-read.csv("sushi3a.5000.10.order",sep=' ',header=FALSE) #Isn't most sushi raw?
perms=as.matrix(rawsushi)[,3:12]
write.csv(perms,'SushiClean.txt', header=FALSE)
